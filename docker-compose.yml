version: '3.8'

services:
  frontend:
    image: nginx:latest
    container_name: my_frontend
    ports:
      - "20080:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf  # Nginx konfiguratsiyasini mount qilish
      - .:/var/www/html
    depends_on:
      php_frontend:
        condition: service_healthy
      db:
        condition: service_healthy

  backend:
    image: nginx:latest
    container_name: my_backend
    ports:
      - "20081:80"
    volumes:
      - ./backend/nginx.conf:/etc/nginx/nginx.conf  # Nginx konfiguratsiyasini mount qilish
      - .:/var/www/html
    depends_on:
      php_backend:
        condition: service_healthy
      db:
        condition: service_healthy

  php_frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: my_php_frontend
    volumes:
      - .:/var/www/html
    environment:
      - YII_ENV=dev
      - YII_DEBUG=1
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  php_backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: my_php_backend
    volumes:
      - .:/var/www/html
    environment:
      - YII_ENV=dev
      - YII_DEBUG=1
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13
    container_name: my_db
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: app
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5
